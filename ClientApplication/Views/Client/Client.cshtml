
@{
    ViewBag.Title = "Client";
}
<div>
    <div class="row" style="border: 1px solid #808080; border-image: none; margin-top:1%; height:500px" >
        <div class="col-lg-6" style="padding: 1% 1% 1% 1%; width: 20%; float: left;" >
            <h5 style="text-decoration:underline">Select Curves</h5>

            @foreach (var item in ViewBag.CurveHeaders)
            {
                <div class="checkbox">
                    <label>
                        <input type="checkbox"
                               name="SelectedHeaders"
                               value="@item.Value" /> @item.Text
                        </label>
                    </div>
            }
            <button id="btStart" type="button" class="btn-default">Start</button>
            <button id="btStop" type="button" class="btn-default">Stop</button>
          
        </div>
        <div class="col-lg-6" style="padding:1% 1% 1% 1%; height:450px">
            <h5 id="hCurvesData" style="text-decoration:underline" >Curves Data</h5>

            <div id="CurveDetails" style="height:400px;overflow-y:auto; position:relative; width:800px">

                <table id="tblCurveDetails" class="table table-hover"></table>
               
            </div>

        </div>
        
    </div>

    <div style="float:right;margin-top:1%">
        <button id="btExport" type="button" class="btn-default">Export</button>
    </div>
  
</div>
@section Scripts  {


    <script>
        $(document).ready(function () {

           
            $("#hCurvesData").hide();
            $("#btStop").attr("disabled", true);
            $("#btExport").attr("disabled", true);

            $("#btStart").click(function () {

                var curves = [];

                $('input[name="SelectedHeaders"]:checked').each(function () {
                    // console.log(this.value);
                    curves.push(this.value);
                });

                if (curves.length == 0) {
                    alert("Please select any curve");
                    return;
                }

                $("#hCurvesData").show();

                $("#btStart").attr("disabled", true);
                $("#btExport").attr("disabled", true);
                $("#btStop").attr("disabled", false);

                clearInterval(timer);
                
                InvokeDataTransfer(curves);
                SetTableView(curves);
                setInterval(timer, 10000);
            });

            //------------------------------------------------------------------------------

            $("#btStop").click(function () {

                $("#btExport").attr("disabled", false);

                $("#btStop").attr("disabled", true);

                $("#btStart").attr("disabled", false);

                $.ajax({
                    url: '/Client/StopDataTransfer',
                    type: "POST",
                    data: {},
                    dataType: "text",
                    async: false,
                    success: function (data) {
                        //alert("Transfer stoped");
                    }
                });
            });

            $("#btExport").click(function () {

                $.ajax({
                    url: '/Client/ExportData',
                    type: "POST",
                    data: {},
                    dataType: "text",
                    async: false,
                    success: function (data) {
                       // alert("Transfer stoped");
                    }
                });
            });

        });

    </script>

     <script>

         function SetTableView(curves)
         {
             $("#tblCurveDetails").css({"width" : "50%;"})
             $("#tblCurveDetails").empty();
             $('#tblCurveDetails').append('<tr id="tblHeader"></tr>');
             $('#tblHeader').append('<th>index</th>');
             $.each(curves, function () {

                 $('#tblHeader').append('<th>' + this + '</th>');
             })
        

         }

         function AddDataRowToTable(curves) {

             if (curves[0] != "")
             {
                 $('#tblCurveDetails').append('<tr id="' + curves[0] + '"></tr>');
                 $.each(curves, function () {


                     $('#' + curves[0]).append('<td>' + this + '</td>');
                 })
             }
         }
         

         function InvokeDataTransfer(curves) {

          

             $.ajax({
                 url: '/Client/InvokeDataTransfer',
                 type: "POST",
                 data: {curves: curves},
                 dataType: "text",
                 async: false,
                 success: function (data) {
                     //debugger;
                     // var student = JSON.parse(data);
                    // alert("Transfer started");
                 }
             });

         };
         
      var timer = function  SubscribeData() {
            
            $.ajax({
                url: '/Client/SubscribeData',
                type: "POST",
                data: {},
                dataType: "text",
                async: true,
                success: function (data) {
                    //debugger;
                    var curvesData = JSON.parse(data);
                    AddDataRowToTable(curvesData);
                    //alert("Hai");
                }
            });
             
         };
         
     </script>

 }


